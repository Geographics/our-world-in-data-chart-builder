version: "3.7"

services:
    # Stock mysql database. Root password is hardcoded for now
    db:
        image: mysql/mysql-server:latest
        command: --default-authentication-plugin=mysql_native_password --log-bin-trust-function-creators=ON
        restart: always
        volumes:
            - mysql_data_testing:/var/lib/mysql
        ports:
            # Exposing via the port specified for Grapher
            # Should always be the same as the WordPress port, because we store both DBs on the same server
            - "${GRAPHER_TEST_DB_PORT}:3306"
        environment:
            MYSQL_ROOT_PASSWORD: weeniest-stretch-contaminate-gnarl
            MYSQL_ROOT_HOST: "%"

    # mysql:8.0 container with slight augmentation (+curl, +unzip, +ssh client, ...) for running the DB init scripts
    # These init scripts check if the grapher and wordpress databases and users are missing, if so they create them
    # and pull the data to have a working dev environment. As the wordpress donwload needs a working ssh access, it
    # mounts the SSH agent and ~/.ssh directory into the container
    db-load-data:
        build:
            context: ./devTools/docker/mysql-init-docker
        # image: mysql/mysql-server:latest
        command: "/app/create-test-db.sh"
        volumes:
            - ./devTools/docker:/app
            - ./db/migration:/migration
            - ./tmp-downloads:/tmp-downloads
            # - ~/.ssh:/user/.ssh # map the .ssh directory into the container so it knows about the owid-live ssh configuration
            # - ${SSH_AUTH_SOCK}:/ssh-agent # Forward the SSH agent socket into the container
        environment:
            DB_ROOT_PASS: weeniest-stretch-contaminate-gnarl
            DB_ROOT_HOST: db
            DATA_FOLDER: "/tmp-downloads"
            # SSH_AUTH_SOCK: "/ssh-agent"
        env_file:
            - .env
        depends_on:
            - db

volumes:
    mysql_data_testing:
