version: "3.7"

# This docker-compose file creates a full local dev environment for both grapher and cloudflare. It is meant for
# OWID internal developers.

# This setup assumes that work on the grapher happens outside any docker container - i.e. there is no Node 18
# container included in this setup. The idea is that grapher development (as well as running vite and the
# admin server) happens on the host, and that only the mysql, php and nginx dependencies run as containers.

# The mysql database server is exposed on the host at the default mysql port of 3306 so you can use DB admin
# utilities on the host working against localhost:3306

# Check out the docs for more information about how this setup works.

services:
    # Stock mysql database. Used for grapher database. Root password is hardcoded for now
    db:
        image: mysql/mysql-server:latest
        command: --default-authentication-plugin=mysql_native_password
        restart: always
        volumes:
            - ./devTools/docker/my.cnf:/etc/my.cnf:ro
            - mysql_data:/var/lib/mysql
            - ./logs:/var/log/mysql
        ports:
            # Exposing via the port specified for Grapher
            - "${GRAPHER_DB_PORT}:3306"
        environment:
            MYSQL_ROOT_PASSWORD: weeniest-stretch-contaminate-gnarl
            MYSQL_ROOT_HOST: "%"

    # mysql 8.0 container with slight augmentation (+curl, +unzip, +ssh client, ...) for running the DB init scripts
    # These init scripts check if the grapher database and users are missing, if so they create them
    # and pull the data to have a working dev environment.
    db-load-data:
        build:
            context: ./devTools/docker/mysql-init-docker
        # image: mysql/mysql-server:latest
        command: "/app/full-mysql-init.sh"
        volumes:
            - ./devTools/docker:/app
            - ./tmp-downloads:/tmp-downloads
            # - ~/.ssh:/user/.ssh # map the .ssh directory into the container so it knows about the owid-live ssh configuration
            # - ${SSH_AUTH_SOCK}:/ssh-agent # Forward the SSH agent socket into the container
        environment:
            DB_ROOT_PASS: weeniest-stretch-contaminate-gnarl
            DB_ROOT_HOST: db
            DATA_FOLDER: "/tmp-downloads"
            # SSH_AUTH_SOCK: "/ssh-agent"
        env_file:
            - .env
        depends_on:
            - db

    # Nginx that is used together with wordpress for the CSM part and top level routing.
    web:
        image: nginx:1.21
        ports:
            - 8080:80
        volumes:
            - ./devTools/docker/vhosts.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - fpm

volumes:
    mysql_data:
