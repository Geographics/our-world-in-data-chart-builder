name: Auto-deploy to GitHub Pages

# Builds and deploys Storybook and a Jest coverage report to owid.github.io.
# Most stuff in here is handled by https://github.com/marketplace/actions/deploy-to-github-pages

on:
    push:
        branches:
            - master
jobs:
    build-deploy-storybook-coverage:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout üõéÔ∏è
              uses: actions/checkout@v2 # If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.
              with:
                  persist-credentials: false

            # Use Node version specified in .nvmrc
            # https://github.com/actions/setup-node/issues/32#issuecomment-525791142
            - name: Read .nvmrc
              id: nvm
              run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"

            - name: Use Node.js (.nvmrc)
              uses: actions/setup-node@v1
              with:
                  node-version: "${{ steps.nvm.outputs.NVMRC }}"

            # Restore yarn cache, makes it way faster
            # https://github.com/actions/cache/blob/master/examples.md#node---yarn
            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"

            - uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-${{ steps.nvm.outputs.NVMRC }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-${{ steps.nvm.outputs.NVMRC }}-yarn

            - uses: actions/cache@v2
              id: node-modules-cache
              with:
                  path: node_modules
                  key: ${{ runner.os }}-${{ steps.nvm.outputs.NVMRC }}-node-modules-${{ hashFiles('**/yarn.lock') }}

            - name: Install dependencies
              run: yarn --frozen-lockfile --network-concurrency 1

            # Note: running these two build steps subsequently means that if either `buildStorybook` or `coverage` fails,
            # neither of them is deployed :(
            # Let's hope this doesn't happen too often

            - name: Build Storybook üîß
              run: yarn buildStorybook

            - name: Generate Jest coverage report üÉè
              run: yarn buildCoverage

            - name: Generate coverage badge üîñ
              run: |
                  mkdir -p badges
                  yarn lcov-badge -o badges/coverage.svg coverage/lcov.info

            # We're using two subsequent deploys instead of making them parallel because `github-pages-deploy-action`
            # force-pushes, and if we have two deploys running at the same time that might lead to missing update situations.

            - name: Deploy Storybook üöÄ
              uses: JamesIves/github-pages-deploy-action@3.7.1
              with:
                  ACCESS_TOKEN: ${{ secrets.STORYBOOK_DEPLOY_ACCESS_TOKEN }}
                  BRANCH: master
                  FOLDER: .storybook/build
                  REPOSITORY_NAME: owid/owid.github.io
                  TARGET_FOLDER: stories
                  COMMIT_MESSAGE: |-
                      ü§ñ update Storybook
                      owid/owid-grapher@${{ github.sha }}
                  GIT_CONFIG_NAME: owidbot
                  GIT_CONFIG_EMAIL: tech@ourworldindata.org

            - name: Deploy Coverage Report üöÄ
              uses: JamesIves/github-pages-deploy-action@3.7.1
              with:
                  ACCESS_TOKEN: ${{ secrets.STORYBOOK_DEPLOY_ACCESS_TOKEN }}
                  BRANCH: master
                  FOLDER: coverage/lcov-report
                  REPOSITORY_NAME: owid/owid.github.io
                  TARGET_FOLDER: coverage
                  COMMIT_MESSAGE: |-
                      ü§ñ update coverage report
                      owid/owid-grapher@${{ github.sha }}
                  GIT_CONFIG_NAME: owidbot
                  GIT_CONFIG_EMAIL: tech@ourworldindata.org

            - name: Deploy Badges üöÄ
              uses: JamesIves/github-pages-deploy-action@3.7.1
              with:
                  ACCESS_TOKEN: ${{ secrets.STORYBOOK_DEPLOY_ACCESS_TOKEN }}
                  BRANCH: master
                  FOLDER: badges
                  REPOSITORY_NAME: owid/owid.github.io
                  TARGET_FOLDER: badges
                  COMMIT_MESSAGE: |-
                      ü§ñ update badges
                      owid/owid-grapher@${{ github.sha }}
                  GIT_CONFIG_NAME: owidbot
                  GIT_CONFIG_EMAIL: tech@ourworldindata.org
