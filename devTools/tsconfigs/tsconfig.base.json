{
    "extends": "@tsconfig/node22/tsconfig.json",
    "compilerOptions": {
        "module": "commonjs",
        "resolveJsonModule": true,
        "forceConsistentCasingInFileNames": true,
        "composite": true,

        "declaration": true,
        "declarationMap": true,

        // To get newer APIs like Set.prototype.intersection(), we need to use
        // ESNext lib on Node 22 and current version of TypeScript (5.7.2).
        // However, using the ESNext option doesn't work with
        // @types/node@20.8.3, which we are currently pinned to, to fix an
        // unrelated bug with types in Cloudflare Functions, thus we only use
        // ESNext.Collection.
        // https://github.com/microsoft/TypeScript/issues/59919
        // https://developers.cloudflare.com/workers/languages/typescript/#transitive-loading-of-typesnode-overrides-cloudflareworkers-types
        "lib": [
            "dom",
            "dom.iterable",
            "es2020",
            "es2021",
            "es2022",
            "es2023",
            "ESNext.Collection"
        ],
        // Using es2022 as a `target` caused the following error in wrangler:
        // "Uncaught TypeError: PointVector is not a constructor".
        // This seems to be related to a change in how classes are compiled in
        // es2022 when used with `experimentalDecorators`. It probably means
        // that to upgrade to a newer target, we'll either have to stop using
        // `experimentalDecorators` or this problem might be eventuallly fixed
        // by upgrading to a newer version of TypeScript or wrangler, or in one
        // of the higher `target`s. Possibly related TypeScript issues:
        // https://github.com/microsoft/TypeScript/issues/51570
        // https://github.com/microsoft/TypeScript/issues/52004
        "target": "es2021",

        "alwaysStrict": true,
        "noImplicitReturns": true,
        "allowJs": false,
        "sourceMap": true,
        "moduleResolution": "node",
        "jsx": "react-jsx",

        "experimentalDecorators": true,
        "useDefineForClassFields": false,
        "emitDecoratorMetadata": false,

        "isolatedModules": true
    }
}
